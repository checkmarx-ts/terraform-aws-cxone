# Amazon Linux 2 managed node group updates - region dependent
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"amazonlinux-2-repos-us-west-2.s3.dualstack.us-west-2.amazonaws.com"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:22; rev:1;)

# Eks Add Ons
# Cluster Autoscaler - k8s.gcr.io/autoscaling/cluster-autoscaler
# External DNS - k8s.gcr.io/external-dns/external-dns
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"k8s.gcr.io"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:44; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"storage.googleapis.com"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:45; rev:1;)

# External DNS requires route53.amazonaws.com
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"route53.amazonaws.com"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:46; rev:1;)

# AWS Load Balancer Controller Image Pull
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"prod-us-west-2-starport-layer-bucket.s3.us-west-2.amazonaws.com"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:47; rev:1;)

# Kots & CxOne image pulls
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; dotprefix; content:".docker.io"; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:50; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; dotprefix; content:".docker.com"; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:51; rev:1;)

# Replicated APIs
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"replicated.app"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:52; rev:1;)

# Replicated Image Proxy
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"proxy.replicated.com"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:53; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"proxy-auth.replicated.com"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:54; rev:1;)


# Split.io
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"sdk.split.io"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:55; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"auth.split.io"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:56; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"telemetry.split.io"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:57; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"streaming.split.io"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:58; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"events.split.io"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:581; rev:1;)


# Traefik
alert tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:".traefik.io"; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:601; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"update.traefik.io"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:60; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"collect.traefik.io"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:61; rev:1;)

# Liquibase
pass http $HOME_NET any -> $EXTERNAL_NET 80 (http.host; content:"www.liquibase.org"; startswith; endswith; msg:"Match liquidbase.com allowed"; priority:1; flow:to_server, established; sid:62; rev:1;)

# SCA Containers ES
alert tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"cx-sca-containers.es.us-east-1.aws.found.io"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:631; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"cx-sca-containers.es.us-east-1.aws.found.io"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:63; rev:1;)

# Minio Gateway
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"s3.amazonaws.com"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:64; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"s3-1.amazonaws.com"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:65; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"s3.us-east-1.amazonaws.com"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:66; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"s3.dualstack.us-east-1.amazonaws.com"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:70; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; dotprefix; content:".s3.dualstack.us-west-2.amazonaws.com"; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:71; rev:1;)


# Codebashing
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"api.stagecodebashing.com"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:72; rev:1;)

# Access to s3 endpoints without tls sni
# See  curl https://ip-ranges.amazonaws.com/ip-ranges.json | jq -r '.prefixes[] | select(.service=="S3") | .ip_prefix'
pass tcp $HOME_NET any -> [3.5.140.0/22,52.219.170.0/23,52.219.168.0/24,52.95.150.0/24,52.219.60.0/23,16.12.44.0/24,16.12.6.0/23,16.12.32.0/22,52.219.204.0/22,76.223.102.0/24,52.95.182.0/23,52.219.212.0/22,76.223.96.0/24,108.175.56.0/22,52.219.192.0/23,16.12.24.0/21,52.95.136.0/23,52.219.143.0/24,3.5.40.0/22,3.5.136.0/22,52.219.72.0/22,52.219.68.0/22,136.18.0.0/23,3.5.160.0/22,13.248.230.0/24,52.95.174.0/24,52.95.187.0/24,16.12.48.0/21,52.219.141.0/24,52.219.255.0/24,52.95.139.0/24,52.95.128.0/21,52.219.162.0/23,52.95.178.0/23,3.5.36.0/22,52.95.168.0/24,52.219.16.0/22,3.5.208.0/22,18.34.0.0/19,16.12.15.0/24,54.222.100.0/22,18.34.72.0/21,16.12.10.0/23,52.219.148.0/23,52.219.211.0/24,3.5.128.0/22,52.219.195.0/24,3.5.72.0/23,52.95.166.0/23,16.12.20.0/24,16.12.42.0/23,52.95.169.0/24,3.5.152.0/21,16.12.16.0/23,52.218.0.0/17,52.219.142.0/24,52.219.0.0/20,3.5.252.0/22,13.248.231.0/24,76.223.104.0/24,52.219.32.0/21,3.5.228.0/22,52.219.20.0/24,52.95.157.0/24,108.175.52.0/22,52.82.184.0/23,52.95.176.0/24,76.223.99.0/24,3.5.48.0/22,52.95.140.0/23,52.95.156.0/24,16.12.2.0/24,52.95.160.0/23,52.219.62.0/23,3.5.214.0/23,108.175.60.0/22,13.248.225.0/24,3.5.164.0/22,52.95.151.0/24,3.5.240.0/22,13.248.229.0/24,54.231.0.0/16,52.95.158.0/23,52.216.0.0/15,3.5.184.0/21,16.12.58.0/24,52.219.210.0/24,52.219.96.0/20,52.95.148.0/23,3.5.204.0/22,52.95.162.0/24,76.223.97.0/24,3.5.76.0/22,16.12.36.0/22,3.5.44.0/22,13.248.228.0/24,52.219.180.0/22,52.219.219.0/24,83.118.240.0/21,52.95.172.0/23,3.5.64.0/21,52.219.40.0/22,52.219.136.0/22,54.222.52.0/22,3.5.132.0/23,52.95.190.0/24,52.219.24.0/21,3.5.168.0/23,108.175.48.0/22,52.95.177.0/24,13.248.224.0/24,52.95.175.0/24,52.219.164.0/22,18.34.244.0/22,52.95.186.0/24,54.222.112.0/20,76.223.95.0/24,13.248.227.0/24,16.15.0.0/21,3.5.248.0/22,52.95.164.0/23,52.219.201.0/24,16.12.8.0/24,76.223.101.0/24,52.219.160.0/23,52.219.124.0/22,52.219.232.0/22,52.95.152.0/23,52.219.172.0/22,16.12.21.0/24,52.95.138.0/24,52.219.200.0/24,3.5.216.0/22,52.219.202.0/23,3.5.146.0/23,3.5.172.0/22,52.95.180.0/24,18.34.252.0/22,52.95.144.0/24,16.12.9.0/24,52.95.184.0/23,76.223.100.0/24,52.95.142.0/23,52.219.194.0/24,3.5.212.0/23,3.5.220.0/22,52.95.191.0/24,52.219.120.0/22,52.219.64.0/22,52.219.128.0/22,16.12.59.0/24,16.12.64.0/22,3.5.144.0/23,52.219.218.0/24,18.34.48.0/20,18.34.232.0/21,52.219.220.0/23,52.92.0.0/17,52.95.154.0/23,52.219.176.0/22,16.12.12.0/23,76.223.103.0/24,3.5.80.0/21,52.219.156.0/22,76.223.98.0/24,52.219.44.0/22,16.12.14.0/24,52.219.56.0/22,52.219.169.0/24,16.12.0.0/23,52.95.146.0/23,52.219.184.0/21,52.218.128.0/17,16.12.60.0/22,52.219.224.0/22,3.5.244.0/22,16.12.18.0/23,52.219.140.0/24,52.219.254.0/24,52.95.188.0/23,13.248.232.0/24,52.95.163.0/24,3.5.32.0/22,52.219.132.0/22,16.12.56.0/23,52.219.80.0/20,52.219.112.0/21,52.219.144.0/22,52.95.170.0/23,52.219.228.0/22,16.12.4.0/23,52.95.145.0/24,16.182.0.0/16,3.5.56.0/22,3.5.148.0/22,52.219.216.0/23,52.219.152.0/22,16.12.40.0/23,52.219.150.0/23,3.5.0.0/19,54.222.48.0/22,52.95.181.0/24,13.248.226.0/24,52.219.208.0/23,52.82.164.0/22,52.219.196.0/22,54.222.96.0/22,3.5.232.0/22,3.5.236.0/22,52.92.128.0/17,13.248.233.0/24,3.5.134.0/23,3.5.52.0/22,3.5.202.0/23,3.5.224.0/22,52.82.188.0/22,140.179.36.208/28,140.179.36.224/28,140.179.36.240/28,71.131.196.224/28,71.131.196.240/28,68.79.2.192/28,68.79.2.224/28,69.234.250.64/28,69.234.250.80/28,18.252.145.192/28,18.252.145.208/28,15.200.176.128/28,15.200.28.240/28,13.245.93.176/28,13.245.93.192/28,18.167.88.112/28,18.167.88.96/28,35.72.164.240/28,35.73.115.0/28,3.36.167.64/28,3.36.167.80/28,15.152.133.112/28,15.152.133.128/28,65.1.103.208/28,65.1.103.224/28,18.60.78.192/28,18.60.78.208/28,13.213.20.144/28,13.213.20.160/28,3.26.88.0/28,3.26.88.16/28,108.136.154.16/28,108.136.154.32/28,108.136.154.48/28,43.218.193.112/28,43.218.193.96/28,43.218.222.160/28,43.218.222.176/28,16.50.69.192/28,16.50.69.208/28,3.98.24.0/28,3.98.24.16/28,40.176.101.64/28,40.176.98.240/28,3.65.246.0/28,3.65.246.16/28,16.62.56.224/28,16.62.56.240/28,13.51.71.176/28,13.51.71.192/28,35.152.74.144/28,35.152.74.160/28,18.100.209.224/28,18.100.209.240/28,3.251.110.208/28,3.251.110.224/28,18.168.37.160/28,18.168.37.176/28,13.36.84.48/28,13.36.84.64/28,51.17.129.160/28,51.17.129.176/28,3.28.70.112/28,3.28.70.48/28,3.28.70.96/28,3.29.147.48/28,3.29.202.240/28,51.112.11.64/28,51.112.11.80/28,15.184.125.240/28,15.184.153.0/28,15.228.107.0/28,15.228.107.16/28,44.192.134.240/28,44.192.140.64/28,3.141.102.208/28,3.141.102.224/28,3.101.163.64/28,3.101.163.80/28,3.101.163.96/28,35.80.36.208/28,35.80.36.224/28] 443 (msg:"S3 in us-east"; priority:1; sid:67; rev:1;)

# gcr.io
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"gcr.io"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:73; rev:1;)

# minio
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"subnet.min.io"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:74; rev:1;)

#checkmarx jfrog
alert tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"checkmarx.jfrog.io"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:751; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"checkmarx.jfrog.io"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:75; rev:1;)

#github integrations
#alert tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"api.github.com"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:76; rev:1;)
alert tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:".github.com"; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:1080; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:".github.com"; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:1081; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"github.com"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:11081; rev:1;)


# aws shield us-east-1
alert tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"shield.us-east-1.amazonaws.com"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:77; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"shield.us-east-1.amazonaws.com"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:771; rev:1;)

# SCA Connectivity
#alert tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"iam.checkmarx.net"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:801; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"iam.checkmarx.net"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:802; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"api-sca.checkmarx.net"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:803; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"eu.iam.checkmarx.net"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:804; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"eu.api-sca.checkmarx.net"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:805; rev:1;)


# Fastly
#alert tcp $HOME_NET any -> [151.101.0.0/16] 443 (msg:"Fastly"; priority:1; sid:6711; rev:1;)
#pass tcp $HOME_NET any -> [151.101.0.0/16] 443 (msg:"Fastly"; priority:1; sid:671; rev:1;)

# SMTP TO AWS SES, based on "nslookup nslookup email-smtp.us-west-2.amazonaws.com"
pass tcp $HOME_NET any -> [44.225.148.59/32,52.13.3.84/32,54.185.234.152/32] 587 (msg:"AWS SES us-west-2"; priority:1; sid:672; rev:1;)

# minio
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"dl.min.io"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:78; rev:1;)
pass tcp $HOME_NET any -> [138.68.11.125] 443 (msg:"TCP to dl-1.min.io"; priority:1; sid:79; rev:1;)
pass tcp $HOME_NET any -> [178.128.69.202] 443 (msg:"TCP to dl-0.min.io"; priority:1; sid:90; rev:1;)

# If you're not using the VPC endpoints, then .amazonaws.com is going to be required.
# pass tls $HOME_NET any -> $EXTERNAL_NET any (tls.sni; dotprefix; content:".amazonaws.com"; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:32; rev:1;)

# Metrics Server
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"registry.k8s.io"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:87; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"us-west1-docker.pkg.dev"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:88; rev:1;)

# Chainguard images
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:"cgr.dev"; startswith; nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:1187; rev:1;)
pass tls $HOME_NET any -> $EXTERNAL_NET 443 (tls.sni; content:".cloudflarestorage.com";  nocase; endswith; msg:"matching TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:1188; rev:1;)




# HTTP Example
# pass http $HOME_NET any -> $EXTERNAL_NET any (http.host; content:"checkmarx.com"; startswith; endswith; msg:"Match checkmarx.com allowed"; priority:1; flow:to_server, established; sid:5; rev:1;)

# Drop other traffic
drop tls $HOME_NET any -> $EXTERNAL_NET any (msg:"not matching any TLS allowlisted FQDNs"; priority:1; flow:to_server, established; sid:3; rev:1;)
reject tcp $HOME_NET any -> $EXTERNAL_NET any (msg:"blocked uknown tcp"; flow:to_server, established; sid:4; rev:1;)
