apiVersion: kots.io/v1beta1
kind: ConfigValues
metadata:
  creationTimestamp: null
spec:
  values:
    # GENERAL
    org_id:
      value: ${ast_tenant_name} 
    # default_admin_email will be what you sign in with the first time.    
    default_admin_email:
      value: ${admin_email}
    default_admin_user:
      value: admin
    default_admin_password:
      value: ${admin_password}
    environment_type:
      value: development
    deployment_type:
      value: cloud
    ms_replica_count:
      value: "1"
    PROTOCOL:
      default: http
      value: https
    DOMAIN:
      default: ast.local
      value: ${domain}
    DISABLE_RESOURCES_REQUEST_AND_LIMIT:
      value: "1"
    ENABLE_TLS:
      default: "0"
    ADMIN_DOMAIN:
      value: admin.local
    enable_big_scans_configuration:
      value: "1"
    cloud_region:
      value: ${aws_region}
    # MINIO S3 Buckets
    engine_logs_s3_bucket_name:
      value: ${engine_logs_bucket} 
    imports_s3_bucket_name:
      value: ${imports_bucket}
    kics_worker_s3_bucket_name:
      value: ${kics_worker_bucket}
    logs_s3_bucket_name:
      value: ${logs_bucket}
    misc_s3_bucket_name:
      value: ${misc_bucket}
    apisec_s3_bucket_name:
      value: ${apisec_bucket}
    audit_s3_bucket_name:
      value: ${audit_bucket}
    configuration_s3_bucket_name:
      value: ${configuration_bucket}
    queries_s3_bucket_name:
      value: ${queries_bucket}
    report_templates_s3_bucket_name:
      value: ${report_templates_bucket}
    reports_s3_bucket_name:
      value: ${reports_bucket}
    repostore_s3_bucket_name:
      value: ${repostore_bucket}
    sast_metadata_s3_bucket_name:
      value: ${sast_metadata_bucket}
    sast_worker_s3_bucket_name:
      value: ${sast_worker_bucket}
    sca_worker_s3_bucket_name:
      value: ${sca_worker_bucket}
    scans_s3_bucket_name:
      value: ${scans_bucket}
    source_resolver_s3_bucket_name:
      value: ${source_resolver_bucket}
    uploads_s3_bucket_name:
      value: ${uploads_bucket}
    redis_shared_s3_bucket_name:
      value: ${redis_shared_bucket}
    scan_results_storage_s3_bucket_name:
      value: ${scan_results_storage_bucket}
    export_s3_bucket_name:
      value: ${export_bucket}
    cxone_s3_bucket_name:
      value: ${cxone_bucket}      
    
    # DATA
    # POSTGRES

    # postgres_type allowed values are embedded_postgres and external_postgres
    postgres_type:
      value: external_postgres
    external_postgres_host:
      value: ${rds_endpoint}
    external_postgres_port:
      value: "5432"
    embedded_postgres_password: {}
    external_postgres_user:
      value: ${external_postgres_user} #REPLACE_ME
    external_postgres_password:
      value: ${external_postgres_password} #REPLACE_ME
    external_postgres_db:
      value: ${external_postgres_db}
    external_postgres_sslmode:
      value: postgres_sslmode_require
    postgres_sslmode_value:
      value: require
    # REDIS
    redis_type:
      value: external_redis
    external_redis_address:
      value: ${external_redis_address}
    external_redis_port:
      value: "6379"
    external_redis_password: {}
    embedded_redis_password: {}
    external_redis_tls_enabled:
      value: "0"
    external_redis_cluster_mode_enabled:
      value: "1"
    external_redis_tls_skipverify:
      value: "1"
    # SMTP
    enable_smtp:
     value: "1"
    smtp_host: 
      value: ${smtp_host}
    smtp_port:
      value: "587"
    smtp_tls_enabled:
      value: "1"
    smtp_user:
      value: ${smtp_user}
    smtp_password:
      value: ${smtp_password}
    smtp_from_sender:
      value: ${smtp_from_sender}
   
    #NETWORKING
    networking_type_aws:
      # Options: networking_type_load_balancer_AWS_CLB or networking_type_load_balancer_AWS_NLB
      value: networking_type_load_balancer_AWS_NLB
    network_load_balancer_scheme:
      value: internet-facing #internal
    nlb_tls_acm_arn:
      value: ${acm_certificate_arn}

    # SCA Global Inventory
    enable_sca_global_inventory:
      value: "1"
    sca_global_inventory_elasticsearch_host:
      value: ${elasticsearch_host}
    sca_global_inventory_elasticsearch_port:
      value: "443"
    sca_global_inventory_elasticsearch_username:
      value: ast
    sca_global_inventory_elasticsearch_password:
      value: ${elasticsearch_password}
    
    object_storage_url:  #object storage endpoint
      value: ${object_storage_url}
    object_storage_schemeUrl: # object storage endpoint with scheme
      value: https://${object_storage_url}
    object_storage_access_key:
      value: ${object_storage_access_key}
    object_storage_secret_key:
      value: ${object_storage_secret_key}
    object_storage_secure: #object storage secure connection
      value: "1"

